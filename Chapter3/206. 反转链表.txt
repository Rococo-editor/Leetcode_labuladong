/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {//迭代方式反转
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* pre = nullptr;
        ListNode* cur = head;
        while (cur!=nullptr)
        {
            ListNode* node = cur->next;
            cur->next = pre;
            pre = cur;
            cur = node;
        }
        return pre;
        
    }
};

class Solution {//递归方式反转
public:
    ListNode* reverseList(ListNode* head) {
        if (head==nullptr||head->next==nullptr)
        {
            return head;
        }
        ListNode* last = reverseList(head->next);

        head->next->next = head;
        head->next = nullptr;

        return last;
    }
};