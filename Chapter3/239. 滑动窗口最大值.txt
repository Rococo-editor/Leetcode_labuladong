#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
#include <list>
#include <stack>
using namespace std;





class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> TwoDirectionQueue;
        vector<int> ans;
        for (int i = 0; i < k-1; i++)
        {
            while (!TwoDirectionQueue.empty()&&nums[i]>TwoDirectionQueue.back())
            {
                TwoDirectionQueue.pop_back();
            }
            TwoDirectionQueue.push_back(nums[i]);
            
        }
        //ans.push_back(TwoDirectionQueue.front());
        for (int i = k-1; i < nums.size(); i++)
        {
            while (!TwoDirectionQueue.empty()&&nums[i]>TwoDirectionQueue.back())
            {
                TwoDirectionQueue.pop_back();
            }
            TwoDirectionQueue.push_back(nums[i]);
            ans.push_back(TwoDirectionQueue.front());
            if (nums[i-k+1]==TwoDirectionQueue.front())//判断窗口越界
            {
                TwoDirectionQueue.pop_front();
            }
            
            

        }
        return ans;
        
        

    }
};

int main()
{

     
     
     
}
