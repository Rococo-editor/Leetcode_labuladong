#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
#include <list>
#include <stack>
using namespace std;





class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> ans(nums2.size());
        stack<int> s;
        for (int i = nums2.size()-1; i >=0 ; i--)
        {
            while (!s.empty()&&nums2[i]>=s.top())
            {
                s.pop();
            }
            if (s.empty())
            {
                ans[i] = -1;
            }
            else{
                ans[i] = s.top();
            }
            s.push(nums2[i]);
            
        }
        vector<int> num1_ans(nums1.size());
        for (int i = 0; i < nums1.size() ; i++)
        {
            vector<int>::iterator it = find(nums2.begin(),nums2.end(),nums1[i]);
            num1_ans[i] = ans[it-nums2.begin()];

        }
        


        return num1_ans;
    }
};

int main()
{

     
     
     
}
