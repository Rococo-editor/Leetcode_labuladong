#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
#include <list>
#include <stack>
using namespace std;


class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());//注意排序
        vector<vector<int>> ans;
        for (int i = 0; i < nums.size(); i++)
        {
            int targets_twosum = -nums[i];
            vector<vector<int>> temp = twoSum(nums,i+1,targets_twosum);
            for(auto tp:temp){
                tp.push_back(nums[i]);
                ans.push_back(tp);
            }
            while (i<(nums.size()-1)&&nums[i]==nums[i+1])
            {
                i++;
            }
            

        }
        
        return ans;
    }

    vector<vector<int>> twoSum(vector<int>& numbers, int start,int target) {
        int L = start;
        int R = numbers.size()-1;
        sort(numbers.begin(),numbers.end());//注意排序
        vector<vector<int>> res;
        while (L<R)
        {
            int sum = numbers[L]+numbers[R];
            int left_num = numbers[L];
            int right_num = numbers[R];
            if (sum==target)
            {
                res.push_back({numbers[L],numbers[R]});
                while (numbers[L]==left_num&&L<R){L++;}
                while (numbers[R]==right_num&&L<R){R--;}
            }
            else if (sum>target)
            {
                while (numbers[R]==right_num&&L<R){R--;}
            }
            else if (sum<target)
            {
                while (numbers[L]==left_num&&L<R){L++;}
            } 
        }
        return res;
    }
};


int main()
{
    vector<int> nums = {1,3,1,2,2,3};
    Solution s;
    vector<vector<int>> ans =  s.twoSum(nums,4);
    for (int i=0;i<ans.size();i++)
    {
        for (int j = 0; j <ans[i].size(); j++)
        {
            cout<<ans[i][j]<<" ";
        }cout<<endl;
        
    }
    

}
