#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
#include <list>
#include <stack>
using namespace std;


class Solution {
public:
    vector<vector<int>> ans;
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<int> track;
        backtrack(nums,track,0);
        return ans;
    }
    void backtrack(vector<int>& nums, vector<int>& track, int start){
        ans.push_back(track);
        for (int i = start; i < nums.size(); i++)
        {
            track.push_back(nums[i]);
            backtrack(nums,track,i+1);
            track.pop_back();
        }
        
    }
};


int main()
{

     
     
     
}
