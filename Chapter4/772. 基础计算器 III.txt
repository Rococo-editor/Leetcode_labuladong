#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
#include <list>
#include <stack>
using namespace std;

class Solution
{
public:
    int calculate(string s)
    {
        stack<int> stc;
        int num = 0; //数字前的符号
        char sign = '+';

        for (int i = 0; i < s.size(); i++)
        {
            char c = s[i];

            if (isdigit(c)) //如果是数字 继续读
            {
                num = num * 10 + (c - '0'); //加括号防止num溢出
            }
            if (c=='(')
            {
                num = calculate(s.substr(i+1,s.size()));
                int cnt = 0;
                for (; i < s.size(); i++)
                {
                    if (s[i]=='(')
                    {
                        cnt++;
                    }
                    if (s[i]==')')
                    {
                        cnt--;
                    }
                    if (cnt==0)
                    {
                        break;
                    }
                    
                    
                    
                }
                
            }
            
            // c!=' ' 消除空格的影响
            if ((!isdigit(c) && c != ' ') || i == s.size() - 1)
            {
                int pre;
                if (sign == '+')
                {
                    stc.push(num);
                }
                else if (sign == '-')
                {
                    stc.push(-num);
                }
                else if (sign == '*')
                {
                    pre = stc.top();
                    stc.pop();
                    stc.push(pre * num);
                }
                else if (sign == '/')
                {
                    pre = stc.top();
                    stc.pop();
                    stc.push(pre / num);
                }

                sign = c;
                num = 0;
            }
            if (c==')')
            {
                break;
            }
            
        }
        int res = 0;
        while (!stc.empty())
        {
            res += stc.top();
            stc.pop();
        }
        return res;
    }
};

int main()
{
    Solution s;
    string s1 = "(2+63+5-(3*14/7+2)*5)+3";
    cout << s.calculate(s1) << endl;
}
