#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
using namespace std;


  


class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
          int M = text1.size();
          int N = text2.size();

          int dp[M+1][N+1];
          
          for (int i = 0; i <= M; i++){dp[i][0]=0;}
          for (int i = 0; i <= N; i++){dp[0][i]=0;}

          for (int i = 1; i <= M; i++)
          {
               for (int j = 1; j <= N; j++)
               {
                    if (text1[i-1]==text2[j-1])
                    {
                         dp[i][j] = dp[i-1][j-1] + 1;
                    }
                    if (text1[i-1]!=text2[j-1])
                    {
                         dp[i][j] = max(dp[i-1][j] , dp[i][j-1]);
                    }
                    
                    
               }
               
          }
          return dp[M][N];
    }
};

int main()
{

     Solution s;
     string s1,s2;
     cin>>s1>>s2;

     cout<<s.longestCommonSubsequence(s1,s2)<<endl;
         
}
