#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
using namespace std;


  


class Solution {
public:
    int longestPalindromeSubseq(string s) {
          int N = s.size();
          int dp[N][N];
          for (int i = 0; i < N; i++)
          {
               dp[i][i] = 1;
          }
          for (int i = 0; i < N; i++)
          {
               for (int j = 0; j < N; j++)
               {
                    if (i > j)
                    {
                         dp[i][j] = 0;
                    }
                    
               }
               
          }
          for (int i = N-2; i >= 0; i--)
          {
               for (int j = i+1; j <= N-1; j++)
               {
                    if (s[i]==s[j])
                    {
                         dp[i][j] = dp[i+1][j-1] + 2;
                    }
                    else{
                         dp[i][j] = max(dp[i][j-1],dp[i+1][j]);
                    }
                    
               }
               
          }
          return dp[0][N-1];
          
          
          

    }
};

int main()
{

     Solution s;
     string s1;
     cin>>s1;

     cout<<s.longestPalindromeSubseq(s1)<<endl;
         
}
