#include <iostream>
#include <queue>
#include <string>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <unordered_map>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <string.h>
using namespace std;


  


class Solution {
public:
    int change(int amount, vector<int>& coins) {
        int N = coins.size();
        int A = amount;
        int dp[N+1][A+1];
        for (int i = 0; i < N+1; i++){dp[i][0] = 1;}
        for (int i = 0; i < A+1; i++){dp[0][i] = 0;}

        for (int i = 1; i <= N; i++)
        {
            for (int j = 1; j <= A; j++)
            {
                if ((j-coins[i-1])>=0)
                {
                    dp[i][j] = dp[i-1][j] + dp[i][j-coins[i-1]];
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }
                
            }
            
        }
        return dp[N][A];
         
        
    }
};

int main()
{

     Solution s;
     string s1,s2;
     
     
}
